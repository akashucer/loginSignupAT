{"name": "test_user_can_Register", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=139.0.7258.154)\nStacktrace:\n0   chromedriver                        0x0000000104c8ae00 cxxbridge1$str$ptr + 2742224\n1   chromedriver                        0x0000000104c82d00 cxxbridge1$str$ptr + 2709200\n2   chromedriver                        0x00000001047ccf2c cxxbridge1$string$len + 90124\n3   chromedriver                        0x00000001047b7744 cxxbridge1$string$len + 2084\n4   chromedriver                        0x00000001047b5a54 chromedriver + 203348\n5   chromedriver                        0x00000001047b64d8 chromedriver + 206040\n6   chromedriver                        0x00000001047d011c cxxbridge1$string$len + 102908\n7   chromedriver                        0x0000000104856414 cxxbridge1$string$len + 652532\n8   chromedriver                        0x0000000104855980 cxxbridge1$string$len + 649824\n9   chromedriver                        0x00000001048088f4 cxxbridge1$string$len + 334292\n10  chromedriver                        0x0000000104c4e478 cxxbridge1$str$ptr + 2494024\n11  chromedriver                        0x0000000104c516a4 cxxbridge1$str$ptr + 2506868\n12  chromedriver                        0x0000000104c2f3b0 cxxbridge1$str$ptr + 2366848\n13  chromedriver                        0x0000000104c51f4c cxxbridge1$str$ptr + 2509084\n14  chromedriver                        0x0000000104c204a8 cxxbridge1$str$ptr + 2305656\n15  chromedriver                        0x0000000104c71644 cxxbridge1$str$ptr + 2637844\n16  chromedriver                        0x0000000104c717d0 cxxbridge1$str$ptr + 2638240\n17  chromedriver                        0x0000000104c8294c cxxbridge1$str$ptr + 2708252\n18  libsystem_pthread.dylib             0x000000019a666c0c _pthread_start + 136\n19  libsystem_pthread.dylib             0x000000019a661b80 thread_start + 8", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ae80e66c610da1a6ffd42c5058238aab\")>\n\n    @allure.feature(\"Signup\")\n    @allure.description(\"Verify user is able to sign up successfully\")\n    def test_user_can_Register(driver):\n        signup_page = SignupPage(driver, locators)\n        user_data = generate_user()\n        with allure.step(\"Open Signup Page\"):\n>           signup_page.open(\"/Users/akashdeepsingh/Desktop/Ecommerce_app/index.html\")\n\ntests/test_signup_login.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/signup_page.py:11: in open\n    self.driver.get(url)\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:454: in get\n    self.execute(Command.GET, {\"url\": url})\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1083ebe00>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"invalid argument\\\\n  (Session info: chrome=1...00019a666c0c _pthread_start + 136\\\\n19  libsystem_pthread.dylib             0x000000019a661b80 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\nE         (Session info: chrome=139.0.7258.154)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000104c8ae00 cxxbridge1$str$ptr + 2742224\nE       1   chromedriver                        0x0000000104c82d00 cxxbridge1$str$ptr + 2709200\nE       2   chromedriver                        0x00000001047ccf2c cxxbridge1$string$len + 90124\nE       3   chromedriver                        0x00000001047b7744 cxxbridge1$string$len + 2084\nE       4   chromedriver                        0x00000001047b5a54 chromedriver + 203348\nE       5   chromedriver                        0x00000001047b64d8 chromedriver + 206040\nE       6   chromedriver                        0x00000001047d011c cxxbridge1$string$len + 102908\nE       7   chromedriver                        0x0000000104856414 cxxbridge1$string$len + 652532\nE       8   chromedriver                        0x0000000104855980 cxxbridge1$string$len + 649824\nE       9   chromedriver                        0x00000001048088f4 cxxbridge1$string$len + 334292\nE       10  chromedriver                        0x0000000104c4e478 cxxbridge1$str$ptr + 2494024\nE       11  chromedriver                        0x0000000104c516a4 cxxbridge1$str$ptr + 2506868\nE       12  chromedriver                        0x0000000104c2f3b0 cxxbridge1$str$ptr + 2366848\nE       13  chromedriver                        0x0000000104c51f4c cxxbridge1$str$ptr + 2509084\nE       14  chromedriver                        0x0000000104c204a8 cxxbridge1$str$ptr + 2305656\nE       15  chromedriver                        0x0000000104c71644 cxxbridge1$str$ptr + 2637844\nE       16  chromedriver                        0x0000000104c717d0 cxxbridge1$str$ptr + 2638240\nE       17  chromedriver                        0x0000000104c8294c cxxbridge1$str$ptr + 2708252\nE       18  libsystem_pthread.dylib             0x000000019a666c0c _pthread_start + 136\nE       19  libsystem_pthread.dylib             0x000000019a661b80 thread_start + 8\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py:232: InvalidArgumentException"}, "description": "Verify user is able to sign up successfully", "steps": [{"name": "Open Signup Page", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidArgumentException: Message: invalid argument\n  (Session info: chrome=139.0.7258.154)\nStacktrace:\n0   chromedriver                        0x0000000104c8ae00 cxxbridge1$str$ptr + 2742224\n1   chromedriver                        0x0000000104c82d00 cxxbridge1$str$ptr + 2709200\n2   chromedriver                        0x00000001047ccf2c cxxbridge1$string$len + 90124\n3   chromedriver                        0x00000001047b7744 cxxbridge1$string$len + 2084\n4   chromedriver                        0x00000001047b5a54 chromedriver + 203348\n5   chromedriver                        0x00000001047b64d8 chromedriver + 206040\n6   chromedriver                        0x00000001047d011c cxxbridge1$string$len + 102908\n7   chromedriver                        0x0000000104856414 cxxbridge1$string$len + 652532\n8   chromedriver                        0x0000000104855980 cxxbridge1$string$len + 649824\n9   chromedriver                        0x00000001048088f4 cxxbridge1$string$len + 334292\n10  chromedriver                        0x0000000104c4e478 cxxbridge1$str$ptr + 2494024\n11  chromedriver                        0x0000000104c516a4 cxxbridge1$str$ptr + 2506868\n12  chromedriver                        0x0000000104c2f3b0 cxxbridge1$str$ptr + 2366848\n13  chromedriver                        0x0000000104c51f4c cxxbridge1$str$ptr + 2509084\n14  chromedriver                        0x0000000104c204a8 cxxbridge1$str$ptr + 2305656\n15  chromedriver                        0x0000000104c71644 cxxbridge1$str$ptr + 2637844\n16  chromedriver                        0x0000000104c717d0 cxxbridge1$str$ptr + 2638240\n17  chromedriver                        0x0000000104c8294c cxxbridge1$str$ptr + 2708252\n18  libsystem_pthread.dylib             0x000000019a666c0c _pthread_start + 136\n19  libsystem_pthread.dylib             0x000000019a661b80 thread_start + 8\n\n", "trace": "  File \"/Users/akashdeepsingh/Desktop/Ecommerce_app/tests/test_signup_login.py\", line 16, in test_user_can_Register\n    signup_page.open(\"/Users/akashdeepsingh/Desktop/Ecommerce_app/index.html\")\n    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/akashdeepsingh/Desktop/Ecommerce_app/pages/signup_page.py\", line 11, in open\n    self.driver.get(url)\n    ~~~~~~~~~~~~~~~^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py\", line 454, in get\n    self.execute(Command.GET, {\"url\": url})\n    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1756360567628, "stop": 1756360567630}], "start": 1756360567627, "stop": 1756360567633, "uuid": "65a22d4d-d62b-450e-b75d-2421c9c67e71", "historyId": "434bc8e9f871744b8756f28dd0b5058f", "testCaseId": "434bc8e9f871744b8756f28dd0b5058f", "fullName": "tests.test_signup_login#test_user_can_Register", "labels": [{"name": "feature", "value": "Signup"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_signup_login"}, {"name": "host", "value": "Akashs-MacBook-Air-2.local"}, {"name": "thread", "value": "4463-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_signup_login"}]}